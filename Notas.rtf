{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf820
{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red63\green127\blue95;}
{\*\expandedcolortbl;;\csgenericrgb\c24706\c49804\c37255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww16300\viewh12420\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs22 \cf2 // Boolean endCheckUserInput = false;\cf0 \
\cf2 /* package org.altar.session1.test;\cf0 \
\
\cf2 import java.util.Scanner;\cf0 \
\
\cf2 public class test \{\cf0 \
\
\cf2 	public static void main(String[] \ul args\ulnone ) \{\cf0 \
\cf2 		\ul int\ulnone  input = getInput(1, 3);\cf0 \
\cf2 		switch (input) \{\cf0 \
\cf2 		case 1:\cf0 \
\cf2 			break;\cf0 \
\cf2 		case 2:\cf0 \
\cf2 			break;\cf0 \
\cf2 		\}\cf0 \
\cf2 	\}\cf0 \
\
\cf2 	public static \ul int\ulnone  getInput(\ul int\ulnone  \ul min\ulnone , \ul int\ulnone  max) \{\cf0 \
\cf2 		Scanner s = new Scanner(System.in);\cf0 \
\cf2 		\ul int\ulnone  input = 0;\cf0 \
\
\cf2 		while (true) \{\cf0 \
\cf2 			if (s.hasNextInt()) \{\cf0 \
\cf2 				input = s.nextInt();\cf0 \
\cf2 				if (input >= \ul min\ulnone  && input <= max) \{\cf0 \
\cf2 					return input;\cf0 \
\cf2 				\} else \{\cf0 \
\cf2 					System.out.println("\ul Por\ulnone  favor \ul introduza\ulnone  \ul um\ulnone  \ul numero\ulnone  \ul entre\ulnone  " + \ul min\ulnone  + " e " + max);\cf0 \
\cf2 				\}\cf0 \
\cf2 			\} else \{\cf0 \
\cf2 				System.out.println("\ul Por\ulnone  favor \ul introduza\ulnone  \ul um\ulnone  \ul n\'famero\ulnone ");\cf0 \
\cf2 				s.next();\cf0 \
\cf2 			\}\cf0 \
\cf2 		\}\cf0 \
\cf2 	\}\cf0 \
\
\cf2 \}\cf0 \
\cf2 */\cf0 \
\
\cf2 /*if( userOption > 3 && userOption <=5)\{\cf0 \
\cf2 				\cf0 \
\cf2 				switch (userOption) \{\cf0 \
\cf2 					\cf0 \
\cf2 					case 1:\cf0 \
\cf2 						System.out.println("\ul Criar\ulnone  \ul novo\ulnone  \ul produto\ulnone ");\cf0 \
\cf2 						break;\cf0 \
\cf2 						\cf0 \
\cf2 					case 2:\cf0 \
\cf2 						System.out.println("\ul Editar\ulnone  \ul um\ulnone  \ul produto\ulnone  \ul existente\ulnone ");\cf0 \
\cf2 						break;\cf0 \
\cf2 						\cf0 \
\cf2 					case 3:\cf0 \
\cf2 						System.out.println("\ul Consultar\ulnone  o \ul detalhe\ulnone  \ul de\ulnone  \ul um\ulnone  \ul produto\ulnone ");\cf0 \
\cf2 						break;\cf0 \
\cf2 							\cf0 \
\cf2 					case 4:\cf0 \
\cf2 						System.out.println("Remover \ul um\ulnone  \ul produto\ulnone ");\cf0 \
\cf2 						break;\cf0 \
\cf2 							\cf0 \
\cf2 					case 5:\cf0 \
\cf2 						firstScreen();\cf0 \
\cf2 						break;\cf0 \
\cf2 				\}\cf0 \
\cf2 			\}			\cf0 \
\cf2 			else if( userOption >= 1 && userOption <=3 )\{\cf0 \
\cf2 				\cf0 \
\cf2 				switch (userOption) \{\cf0 \
\cf2 				\cf0 \
\cf2 					case 1:\cf0 \
\cf2 						secondScreen();\cf0 \
\cf2 						break;\cf0 \
\cf2 						\cf0 \
\cf2 					case 2:\cf0 \
\cf2 						thirdScreen();\cf0 \
\cf2 						break;\cf0 \
\cf2 						\cf0 \
\cf2 					case 3:\cf0 \
\cf2 						System.exit(0);\cf0 \
\cf2 						break;\cf0 \
\cf2 				\}\cf0 \
\cf2 			\}							*/\cf0 \
\cf2 //Scanner s = new Scanner(System.in);\cf0 \
\cf2 /* while (!s.hasNextInt()) \{ // \ul Enquanto\ulnone  \ul n\'e3o\ulnone  \ul tiver\ulnone  \ul n\'famero\ulnone  \ul inteiro\cf0 \ulnone \
\cf2 				\cf0 \
\cf2 				System.out.println("\ul Por\ulnone  favor \ul introduza\ulnone  \ul um\ulnone  \ul caracter\ulnone  \ul num\'e9rico\ulnone !");\cf0 \
\cf2 				s.next(); // \ul Pedir\ulnone  \ul uma\ulnone  \ul nova\ulnone  \ul inser\'e7\'e3o\cf0 \ulnone \
\cf2 			\}\cf0 \
\cf2 			\cf0 \
\cf2 			userOption = s.nextInt(); // \ul Recolher\ulnone  o input \ul v\'e1lido\cf0 \ulnone \
\cf2 			//s.close();\cf0 \
\cf2 			System.out.println(userOption);\cf0 \
\cf2 			\cf0 \
\cf2 			\cf0 \
\cf2 		\}*/\cf0 \
\
\cf2 /*@Override\cf0 \
\cf2 public String toString()\{\cf0 \
\cf2 	return "Id" + id + "| PVP " + \ul pvp\ulnone ;\cf0 \
\cf2 \}\cf0 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \ul \ulc2 sysout\ulnone (Product)*/\cf0 \
\
\cf2 /*arrayList /*System.out.println("Initial size of \ul al\ulnone : " + productLists.size());\cf0 \
\
\cf2 Product p = new Product(productId, productName, discount, \ul iva\ulnone , \ul pvp\ulnone );\cf0 \
\cf2 productLists.add(p);\cf0 \
\
\cf2 for ( \ul int\ulnone  j = 0; j < productId; j++) \{\cf0 \
\cf2 	\cf0 \
\cf2 	System.out.println("\ul Nome\ulnone : " + p.getProductName());\cf0 \
\cf2 	//System.out.println(Product);\cf0 \
\cf2 \}\cf0 \
\cf2 	\cf0 \
\cf2 //productLists.forEach((Product)->System.out.println(Product));\cf0 \
\
\cf2 System.out.println("Size of \ul al\ulnone  after additions: " + productLists.size());\cf0 \
\
\cf2 System.out.println("Contents of Product List: " + productLists);*/\cf0 \
\
\cf2 /* public static void showProducts() \{\cf0 \
\
\cf2 productLists.forEach((Product)->System.out.println(Product));\cf0 \
\cf2 \}*/\cf0 \
\
\cf2 /*//import java.util.ArrayList;\cf0 \
\cf2 	//static ArrayList<Product> productLists = new ArrayList<Product>();*/\
\
//	public static void saveValues(\ul int\ulnone  productId, String productName, double discount, \ul int\ulnone  \ul iva\ulnone , double \ul pvp\ulnone ) \{\cf0 \
\cf2 //		\cf0 \
\cf2 //		Product value = new Product(productId, productName, discount, \ul iva\ulnone , \ul pvp\ulnone );\cf0 \
\cf2 //		\cf0 \
\cf2 //		productLists.put(productId, value);\cf0 \
\cf2 //		\cf0 \
\cf2 //		Set set = productLists.entrySet();\cf0 \
\cf2 //		Iterator i = set.iterator();\cf0 \
\cf2 //		\cf0 \
\cf2 //		while(i.hasNext()) \{\cf0 \
\cf2 //			\cf0 \
\cf2 //			Map.Entry me = (Map.Entry)i.next();\cf0 \
\cf2 //			System.out.print(me.getKey() + ": ");\cf0 \
\cf2 //			System.out.println(me.getValue());\cf0 \
\cf2 //		\}\cf0 \
\cf2 //		System.out.println();\cf0 \
\cf2 //	\}\
\
//productLists.forEach((Product)->System.out.println(Product));}